{"version":3,"sources":["constants/routes.js","constants/history.js","components/SignOut/index.js","components/Navigation/index.js","components/Session/queries.js","components/Session/withSession.js","components/Error/index.js","components/Message/MessageCreate/index.js","components/Message/MessageDelete/index.js","components/Loading/index.js","components/Message/Messages/index.js","components/Assignment/AssignmentCreate/index.js","components/Assignment/AssignmentDelete/index.js","components/Assignment/Assignments/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Session/withAuthorization.js","components/Account/index.js","components/Admin/index.js","components/FlashCards/Decks/DeckItem/index.js","components/FlashCards/Decks/index.js","components/FlashCards/index.js","components/FlashCards/Cards/CardDeck/index.js","components/FlashCards/Cards/index.js","components/App/index.js","index.js"],"names":["LANDING","createHistory","signOut","client","localStorage","setItem","resetStore","history","push","SignOutButton","react_default","a","createElement","react_apollo_browser_umd","type","onClick","NavigationAuth","_ref2","session","Link","to","routes","me","username","role","SignOut","NavigationNonAuth","Navigation","_ref","Navigation_NavigationAuth","Navigation_NavigationNonAuth","GET_ME","gql","_templateObject","withSession","Component","props","query","data","refetch","Object","assign","ErrorMessage","error","message","CREATE_MESSAGE","MessageCreate_templateObject","MessageCreate","state","text","onChange","event","_event$target","target","name","value","_this","setState","defineProperty","onSubmit","_callee","createMessage","regenerator_default","wrap","_context","prev","next","preventDefault","t0","stop","this","_this2","mutation","variables","loading","placeholder","Error","GET_ALL_MESSAGES_WITH_USERS","MessageDelete_templateObject","DELETE_MESSAGE","_templateObject2","MessageDelete","id","update","cache","readQuery","writeQuery","objectSpread","messages","edges","filter","node","pageInfo","deleteMessage","Loading","MESSAGE_CREATED","Messages_templateObject","GET_PAGINATED_MESSAGES_WITH_USERS","Messages_templateObject2","MoreMessagesButton","_ref3","limit","fetchMore","children","cursor","endCursor","updateQuery","previousResult","_ref4","fetchMoreResult","concat","toConsumableArray","MessageList","subscribeToMoreMessage","subscribeToMore","document","_ref5","subscriptionData","messageCreated","_this$props","map","Messages_MessageItem","key","MessageItem","_ref6","user","createdAt","Message_MessageDelete","Messages","components_Loading","react","Messages_MessageList","hasNextPage","Messages_MoreMessagesButton","CREATE_ASSIGNMENT","AssignmentCreate_templateObject","AssignmentCreate","assignment_name","description","url","createAssignment","_this$state","GET_ALL_ASSIGNMENTS_WITH_USERS","AssignmentDelete_templateObject","DELETE_ASSIGNMENT","AssignmentDelete_templateObject2","AssignmentDelete","assignment","assignments","deleteAssignment","ASSIGNMENT_CREATED","Assignments_templateObject","GET_PAGINATED_ASSIGNMENTS_WITH_USERS","Assignments_templateObject2","MoreAssignmentsButton","AssignmentList","subscribeToMoreAssignment","assignmentCreated","Assignments_AssignmentItem","AssignmentItem","Assignment_AssignmentDelete","Assignments","Assignments_AssignmentList","Assignments_MoreAssignmentsButton","Assignment_Assignments","Message_MessageCreate","Message_Messages","SIGN_UP","SignUp_templateObject","INITIAL_STATE","email","password","passwordConfirmation","SignUpForm","signUp","then","asyncToGenerator","mark","token","_x","apply","arguments","isInvalid","autoComplete","disabled","SignUpLink","withRouter","SignUp_SignUpForm","SIGN_IN","SignIn_templateObject","login","SignInForm","signIn","SignIn","SignIn_SignInForm","SignUp_SignUpLink","withAuthorization","conditionFn","networkStatus","Redirect","Assignment_AssignmentCreate","DeckItem","_ref$deck","deck","deckName","dist_default","format","GET_DECKS","Decks_templateObject","Decks","decksToRender","decks","console","log","FlashCards_Decks","CardDeck","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","shuffle","memoize","array","onGoToNext","index","handleMouseHover","bind","assertThisInitialized","isHovering","toggleHoverState","shuffledCards","cards","item","length","onMouseEnter","onMouseLeave","front","back","CARDS_QUERY","Cards_templateObject","Cards","_Component","inherits","createClass","match","params","parseInt","CardDeck_CardDeck","Router","components_Navigation","Route","exact","path","component","components_Landing","SignUp","Account","Admin","FlashCards","FlashCards_Cards","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","_getMainDefinition","getMainDefinition","kind","operation","authLink","ApolloLink","forward","setContext","_ref2$headers","headers","x-token","getItem","errorLink","onError","graphQLErrors","networkError","forEach","locations","statusCode","link","from","InMemoryCache","ApolloClient","ReactDOM","render","components_App","getElementById"],"mappings":"uOAAaA,EAAU,YCERC,aCcTC,EAAU,SAAAC,GACdC,aAAaC,QAAQ,QAAS,IAC9BF,EAAOG,aACPC,EAAQC,KFjBa,YEsBRC,EAlBO,kBACpBC,EAAAC,EAAAC,cAACC,EAAA,eAAD,KACG,SAAAV,GAAM,OACLO,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASC,QAAS,kBAAMb,EAAQC,KAA7C,eCOAa,EAAiB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OACrBR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAIC,GAAV,YAEFX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GHjBc,SGiBpB,eAEFV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GHtBW,YGsBjB,YAAoCF,EAAQI,GAAGC,SAA/C,MAEDL,GAAWA,EAAQI,IAA0B,UAApBJ,EAAQI,GAAGE,MACnCd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GHzBO,UGyBb,UAGJV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACa,EAAD,SAKAC,EAAoB,kBACxBhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GHvCW,WGuCjB,YAEFV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAIC,GAAV,cAKSM,EA3CI,SAAAC,GAAA,IAAGV,EAAHU,EAAGV,QAAH,OACjBR,EAAAC,EAAAC,cAAA,WACGM,GAAWA,EAAQI,GAClBZ,EAAAC,EAAAC,cAACiB,EAAD,CAAgBX,QAASA,IAEzBR,EAAAC,EAAAC,cAACkB,EAAD,oLCTC,IAAMC,EAASC,IAAHC,KCUJC,EARK,SAAAC,GAAS,OAAI,SAAAC,GAAK,OACpC1B,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOwB,MAAON,GACX,SAAAH,GAAA,IAAGU,EAAHV,EAAGU,KAAMC,EAATX,EAASW,QAAT,OACC7B,EAAAC,EAAAC,cAACuB,EAADK,OAAAC,OAAA,GAAeL,EAAf,CAAsBlB,QAASoB,EAAMC,QAASA,kFCCrCG,EANM,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,MAAH,OACnBjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQ+B,EAAMC,0PCElB,IAAMC,EAAiBb,IAAHc,KA+ELC,6MAhEbC,MAAQ,CACNC,KAAM,MAGRC,SAAW,SAAAC,GAAS,IAAAC,EACMD,EAAME,OAAtBC,EADUF,EACVE,KAAMC,EADIH,EACJG,MACdC,EAAKC,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GAAiBc,EAAOC,OAG1BI,+CAAW,SAAAC,EAAOT,EAAOU,GAAd,OAAAC,EAAAnD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTf,EAAMgB,iBADGH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIDL,IAJC,OAKPL,EAAKC,SAAS,CAAER,KAAM,KALfe,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,iCAAAA,EAAAK,SAAAT,EAAAU,KAAA,4IASF,IAAAC,EAAAD,KACCrB,EAASqB,KAAKtB,MAAdC,KAER,OACEvC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACE2D,SAAU3B,EACV4B,UAAW,CAAExB,SAqBZ,SAACY,EAAD5C,KAAkBqB,KAAlBrB,EAAwByD,QAAxB,IAAiC/B,EAAjC1B,EAAiC0B,MAAjC,OACCjC,EAAAC,EAAAC,cAAA,QAAM+C,SAAU,SAAAR,GAAK,OAAIoB,EAAKZ,SAASR,EAAOU,KAC5CnD,EAAAC,EAAAC,cAAA,YACE0C,KAAK,OACLC,MAAON,EACPC,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,qBAEdjE,EAAAC,EAAAC,cAAA,UAAQE,KAAK,UAAb,QAEC6B,GAASjC,EAAAC,EAAAC,cAACgE,EAAD,CAAcjC,MAAOA,cAzDfR,2eChB5B,IAAM0C,EAA8B7C,IAAH8C,KAmB3BC,EAAiB/C,IAAHgD,KAsCLC,EAhCO,SAAArD,GAAA,IAAGgB,EAAHhB,EAAGgB,QAAH,OACpBlC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACE2D,SAAUO,EACVN,UAAW,CAAES,GAAItC,EAAQsC,IACzBC,OAAQ,SAAAC,GACN,IAAM9C,EAAO8C,EAAMC,UAAU,CAC3BhD,MAAOwC,IAGTO,EAAME,WAAW,CACfjD,MAAOwC,EACPvC,KAAKE,OAAA+C,EAAA,EAAA/C,CAAA,GACAF,EADD,CAEFkD,SAAShD,OAAA+C,EAAA,EAAA/C,CAAA,GACJF,EAAKkD,SADF,CAENC,MAAOnD,EAAKkD,SAASC,MAAMC,OACzB,SAAAC,GAAI,OAAIA,EAAKT,KAAOtC,EAAQsC,KAE9BU,SAAUtD,EAAKkD,SAASI,iBAM/B,SAACC,EAAD5E,GAAA,OAAAA,EAAkBqB,KAAlBrB,EAAwByD,QAAxBzD,EAAiC0B,MAChCjC,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASC,QAAS8E,GAA/B,aClDSC,EAFC,kBAAMpF,EAAAC,EAAAC,cAAA,2rBCKtB,IAAMmF,GAAkB/D,IAAHgE,MAgBfC,GAAoCjE,IAAHkE,KAmEjCC,GAAqB,SAAAC,GAAA,IACzBC,EADyBD,EACzBC,MACAT,EAFyBQ,EAEzBR,SACAU,EAHyBF,EAGzBE,UACAC,EAJyBH,EAIzBG,SAJyB,OAMzB7F,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLC,QAAS,kBACPuF,EAAU,CACR7B,UAAW,CACT+B,OAAQZ,EAASa,UACjBJ,SAEFK,YAAa,SAACC,EAADC,GAAyC,IAAtBC,EAAsBD,EAAtBC,gBAC9B,OAAKA,EAIE,CACLrB,SAAShD,OAAA+C,EAAA,EAAA/C,CAAA,GACJqE,EAAgBrB,SADb,CAENC,MAAK,GAAAqB,OAAAtE,OAAAuE,EAAA,EAAAvE,CACAmE,EAAenB,SAASC,OADxBjD,OAAAuE,EAAA,EAAAvE,CAEAqE,EAAgBrB,SAASC,WARzBkB,OAgBdJ,IAICS,8MACJC,uBAAyB,WACvBzD,EAAKpB,MAAM8E,gBAAgB,CACzBC,SAAUpB,GACVW,YAAa,SAACC,EAADS,GAA0C,IAAvBC,EAAuBD,EAAvBC,iBAC9B,IAAKA,EAAiB/E,KACpB,OAAOqE,EAF4C,IAK7CW,EAAmBD,EAAiB/E,KAApCgF,eAER,OAAO9E,OAAA+C,EAAA,EAAA/C,CAAA,GACFmE,EADL,CAEEnB,SAAShD,OAAA+C,EAAA,EAAA/C,CAAA,GACJmE,EAAenB,SADZ,CAENC,MAAK,CACH6B,EAAe1E,SADZkE,OAAAtE,OAAAuE,EAAA,EAAAvE,CAEAmE,EAAenB,SAASC,mGASrCnB,KAAK2C,0DAGE,IAAAM,EACkBjD,KAAKlC,MAAtBoD,EADD+B,EACC/B,SAAUlE,EADXiG,EACWjG,GAElB,OAAOkE,EAASgC,IAAI,SAAA5E,GAAO,OACzBlC,EAAAC,EAAAC,cAAC6G,GAAD,CAAaC,IAAK9E,EAAQsC,GAAItC,QAASA,EAAStB,GAAIA,aAjChCa,aAsCpBwF,GAAc,SAAAC,GAAA,IAAGhF,EAAHgF,EAAGhF,QAAStB,EAAZsG,EAAYtG,GAAZ,OAClBZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKgC,EAAQiF,KAAKtG,UAClBb,EAAAC,EAAAC,cAAA,aAAQgC,EAAQkF,WAChBpH,EAAAC,EAAAC,cAAA,SAAIgC,EAAQK,MAEX3B,GACCsB,EAAQiF,KAAK3C,KAAO5D,EAAG4D,IACrBxE,EAAAC,EAAAC,cAACmH,EAAD,CAAenF,QAASA,MAKjBoF,GArIE,SAAApG,GAAA,IAAGyE,EAAHzE,EAAGyE,MAAO/E,EAAVM,EAAUN,GAAV,OACfZ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CACEwB,MAAO4D,GACPxB,UAAW,CAAE4B,UAEZ,SAAApF,GAA0D,IAAvDqB,EAAuDrB,EAAvDqB,KAAMoC,EAAiDzD,EAAjDyD,QAAgB4B,GAAiCrF,EAAxC0B,MAAwC1B,EAAjCqF,WAAWY,EAAsBjG,EAAtBiG,gBACnC,IAAK5E,EACH,OACE5B,EAAAC,EAAAC,cAAA,2EAHqD,IAUjD4E,EAAalD,EAAbkD,SAER,GAAId,IAAYc,EACd,OAAO9E,EAAAC,EAAAC,cAACqH,EAAD,MAbgD,IAgBjDxC,EAAoBD,EAApBC,MAAOG,EAAaJ,EAAbI,SAEf,OACElF,EAAAC,EAAAC,cAACsH,EAAA,SAAD,KACExH,EAAAC,EAAAC,cAACuH,GAAD,CACE3C,SAAUC,EACVnE,GAAIA,EACJ4F,gBAAiBA,IAGlBtB,EAASwC,aACR1H,EAAAC,EAAAC,cAACyH,GAAD,CACEhC,MAAOA,EACPT,SAAUA,EACVU,UAAWA,GAHb,8aCtEZ,IAAMgC,GAAoBtG,IAAHuG,MAkFRC,8MA7DbxF,MAAQ,CACNyF,gBAAiB,GACjBC,YAAa,GACbC,IAAK,MAGPzF,SAAW,SAAAC,GAAS,IAAAC,EACMD,EAAME,OAAtBC,EADUF,EACVE,KAAMC,EADIH,EACJG,MACdC,EAAKC,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GAAiBc,EAAOC,OAG1BI,+CAAW,SAAAC,EAAOT,EAAOyF,GAAd,OAAA9E,EAAAnD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTf,EAAMgB,iBADGH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAID0E,IAJC,OAKPpF,EAAKC,SAAS,CAAEgF,gBAAiB,GAAIC,YAAa,GAAIC,IAAK,KALpD3E,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,iCAAAA,EAAAK,SAAAT,EAAAU,KAAA,4IASF,IAAAC,EAAAD,KAAAuE,EACuCvE,KAAKtB,MAA3CyF,EADDI,EACCJ,gBAAiBC,EADlBG,EACkBH,YAAaC,EAD/BE,EAC+BF,IAEtC,OACEjI,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACE2D,SAAU8D,GACV7D,UAAW,CAAEgE,kBAAiBC,cAAaC,QAE1C,SAACC,EAAD3H,KAAqBqB,KAArBrB,EAA2ByD,QAA3B,IAAoC/B,EAApC1B,EAAoC0B,MAApC,OACCjC,EAAAC,EAAAC,cAAA,QAAM+C,SAAU,SAAAR,GAAK,OAAIoB,EAAKZ,SAASR,EAAOyF,KAC5ClI,EAAAC,EAAAC,cAAA,YACE0C,KAAK,kBACLC,MAAOkF,EACPvF,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,wCAEdjE,EAAAC,EAAAC,cAAA,YACE0C,KAAK,cACLC,MAAOmF,EACPxF,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,8BAEdjE,EAAAC,EAAAC,cAAA,YACE0C,KAAK,MACLC,MAAOoF,EACPzF,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,eAEdjE,EAAAC,EAAAC,cAAA,UAAQE,KAAK,UAAb,UAEC6B,GAASjC,EAAAC,EAAAC,cAACgE,EAAD,CAAcjC,MAAOA,cAtDZR,6hBCtB/B,IAAM2G,GAAiC9G,IAAH+G,MAqB9BC,GAAoBhH,IAAHiH,MAsCRC,GAhCU,SAAAtH,GAAA,IAAGuH,EAAHvH,EAAGuH,WAAH,OACvBzI,EAAAC,EAAAC,cAACC,EAAA,SAAD,CACE2D,SAAUwE,GACVvE,UAAW,CAAES,GAAIiE,EAAWjE,IAC5BC,OAAQ,SAAAC,GACN,IAAM9C,EAAO8C,EAAMC,UAAU,CAC3BhD,MAAOyG,KAGT1D,EAAME,WAAW,CACfjD,MAAOyG,GACPxG,KAAKE,OAAA+C,EAAA,EAAA/C,CAAA,GACAF,EADD,CAEF8G,YAAY5G,OAAA+C,EAAA,EAAA/C,CAAA,GACPF,EAAK8G,YADC,CAET3D,MAAOnD,EAAK8G,YAAY3D,MAAMC,OAC5B,SAAAC,GAAI,OAAIA,EAAKT,KAAOiE,EAAWjE,KAEjCU,SAAUtD,EAAK8G,YAAYxD,iBAMlC,SAACyD,EAADpI,GAAA,OAAAA,EAAqBqB,KAArBrB,EAA2ByD,QAA3BzD,EAAoC0B,MACnCjC,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASC,QAASsI,GAA/B,sxBCjDN,IAAMC,GAAqBtH,IAAHuH,MAkBlBC,GAAuCxH,IAAHyH,MA6DpCC,GAAwB,SAAAtD,GAAA,IAAGC,EAAHD,EAAGC,MAAOT,EAAVQ,EAAUR,SAAUU,EAApBF,EAAoBE,UAAWC,EAA/BH,EAA+BG,SAA/B,OAC5B7F,EAAAC,EAAAC,cAAA,UACEE,KAAK,SACLC,QAAS,kBACPuF,EAAU,CACR7B,UAAW,CACT+B,OAAQZ,EAASa,UACjBJ,SAEFK,YAAa,SAACC,EAADC,GAAyC,IAAtBC,EAAsBD,EAAtBC,gBAC9B,OAAKA,EAIE,CACLuC,YAAY5G,OAAA+C,EAAA,EAAA/C,CAAA,GACPqE,EAAgBuC,YADV,CAET3D,MAAK,GAAAqB,OAAAtE,OAAAuE,EAAA,EAAAvE,CACAmE,EAAeyC,YAAY3D,OAD3BjD,OAAAuE,EAAA,EAAAvE,CAEAqE,EAAgBuC,YAAY3D,WAR5BkB,OAgBdJ,IAICoD,8MACJC,0BAA4B,WAC1BpG,EAAKpB,MAAM8E,gBAAgB,CACzBC,SAAUmC,GACV5C,YAAa,SAACC,EAADS,GAA0C,IAAvBC,EAAuBD,EAAvBC,iBAC9B,IAAKA,EAAiB/E,KACpB,OAAOqE,EAF4C,IAK7CkD,EAAsBxC,EAAiB/E,KAAvCuH,kBAER,OAAOrH,OAAA+C,EAAA,EAAA/C,CAAA,GACFmE,EADL,CAEEyC,YAAY5G,OAAA+C,EAAA,EAAA/C,CAAA,GACPmE,EAAeyC,YADT,CAET3D,MAAK,CACHoE,EAAkBV,YADfrC,OAAAtE,OAAAuE,EAAA,EAAAvE,CAEAmE,EAAeyC,YAAY3D,mGASxCnB,KAAKsF,6DAGE,IAAArC,EACqBjD,KAAKlC,MAAzBgH,EADD7B,EACC6B,YAAa9H,EADdiG,EACcjG,GAErB,OAAO8H,EAAY5B,IAAI,SAAA2B,GAAU,OAC/BzI,EAAAC,EAAAC,cAACkJ,GAAD,CAAgBpC,IAAKyB,EAAWjE,GAAIiE,WAAYA,EAAY7H,GAAIA,aAjCzCa,aAsCvB4H,GAAiB,SAAAnC,GAAA,IAAGuB,EAAHvB,EAAGuB,WAAY7H,EAAfsG,EAAetG,GAAf,OACrBZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKuI,EAAWtB,KAAKtG,UACrBb,EAAAC,EAAAC,cAAA,aAAQuI,EAAWrB,WACnBpH,EAAAC,EAAAC,cAAA,SAAIuI,EAAWV,iBACf/H,EAAAC,EAAAC,cAAA,SAAIuI,EAAWT,aAEdpH,GAAM6H,EAAWtB,KAAK3C,KAAO5D,EAAG4D,IAC/BxE,EAAAC,EAAAC,cAACoJ,GAAD,CAAkBb,WAAYA,MAKrBc,GAxHK,SAAArI,GAAA,IAAGyE,EAAHzE,EAAGyE,MAAO/E,EAAVM,EAAUN,GAAV,OAClBZ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOwB,MAAOmH,GAAsC/E,UAAW,CAAE4B,UAC9D,SAAApF,GAA0D,IAAvDqB,EAAuDrB,EAAvDqB,KAAMoC,EAAiDzD,EAAjDyD,QAAgB4B,GAAiCrF,EAAxC0B,MAAwC1B,EAAjCqF,WAAWY,EAAsBjG,EAAtBiG,gBACnC,IAAK5E,EACH,OAAO5B,EAAAC,EAAAC,cAAA,+CAFgD,IAKjDwI,EAAgB9G,EAAhB8G,YAER,GAAI1E,IAAY0E,EACd,OAAO1I,EAAAC,EAAAC,cAACqH,EAAD,MARgD,IAWjDxC,EAAoB2D,EAApB3D,MAAOG,EAAawD,EAAbxD,SAEf,OACElF,EAAAC,EAAAC,cAACsH,EAAA,SAAD,KACExH,EAAAC,EAAAC,cAACsJ,GAAD,CACEd,YAAa3D,EACbnE,GAAIA,EACJ4F,gBAAiBA,IAGlBtB,EAASwC,aACR1H,EAAAC,EAAAC,cAACuJ,GAAD,CACE9D,MAAOA,EACPT,SAAUA,EACVU,UAAWA,GAHb,YCtDGpE,KAXC,SAAAN,GAAA,IAAGV,EAAHU,EAAGV,QAAH,OACdR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACCM,GAAWA,EAAQI,IAAMZ,EAAAC,EAAAC,cAACwJ,GAAD,CAAa9I,GAAIJ,EAAQI,GAAI+E,MAAO,IAC9D3F,EAAAC,EAAAC,cAAA,WACCM,GAAWA,EAAQI,IAAMZ,EAAAC,EAAAC,cAACyJ,EAAD,MACzBnJ,GAAWA,EAAQI,IAAMZ,EAAAC,EAAAC,cAAC0J,GAAD,CAAUhJ,GAAIJ,EAAQI,GAAI+E,MAAO,iQCN/D,IAAMkE,GAAUvI,IAAHwI,MAQPC,GAAgB,CACpBlJ,SAAU,GACVmJ,MAAO,GACPC,SAAU,GACVC,qBAAsB,IAUlBC,8MACJ7H,qBAAayH,MAEbvH,SAAW,SAAAC,GAAS,IAAAC,EACMD,EAAME,OAAtBC,EADUF,EACVE,KAAMC,EADIH,EACJG,MACdC,EAAKC,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GAAiBc,EAAOC,OAG1BI,SAAW,SAACR,EAAO2H,GACjBA,IAASC,KAAT,eAAA3E,EAAA5D,OAAAwI,EAAA,EAAAxI,CAAAsB,EAAAnD,EAAAsK,KAAc,SAAArH,EAAA3C,GAAA,IAAAqB,EAAA,OAAAwB,EAAAnD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAS5B,EAATrB,EAASqB,KACrBkB,EAAKC,SAALjB,OAAA+C,EAAA,EAAA/C,CAAA,GAAmBiI,KAEnBrK,aAAaC,QAAQ,QAASiC,EAAKwI,OAAOI,OAH9BlH,EAAAE,KAAA,EAKNV,EAAKpB,MAAMG,UALL,OAOZiB,EAAKpB,MAAM7B,QAAQC,KAAKa,GAPZ,wBAAA2C,EAAAK,SAAAT,EAAAU,SAAd,gBAAA6G,GAAA,OAAA/E,EAAAgF,MAAA9G,KAAA+G,YAAA,IAUAlI,EAAMgB,0FAGC,IAAAI,EAAAD,KAAAuE,EACqDvE,KAAKtB,MAAzDzB,EADDsH,EACCtH,SAAUmJ,EADX7B,EACW6B,MAAOC,EADlB9B,EACkB8B,SAAUC,EAD5B/B,EAC4B+B,qBAE7BU,EACJX,IAAaC,GACA,KAAbD,GACU,KAAVD,GACa,KAAbnJ,EAEF,OACEb,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAU2D,SAAU+F,GAAS9F,UAAW,CAAElD,WAAUmJ,QAAOC,aACxD,SAACG,EAADlE,KAAWtE,KAAX,IAAiBoC,EAAjBkC,EAAiBlC,QAAS/B,EAA1BiE,EAA0BjE,MAA1B,OACCjC,EAAAC,EAAAC,cAAA,QAAM+C,SAAU,SAAAR,GAAK,OAAIoB,EAAKZ,SAASR,EAAO2H,KAC5CpK,EAAAC,EAAAC,cAAA,SACE0C,KAAK,WACLC,MAAOhC,EACP2B,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,cAEdjE,EAAAC,EAAAC,cAAA,SACE0C,KAAK,QACLC,MAAOmH,EACPxH,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,gBACZ4G,aAAa,aAEf7K,EAAAC,EAAAC,cAAA,SACE0C,KAAK,WACLC,MAAOoH,EACPzH,SAAUqB,EAAKrB,SACfpC,KAAK,WACL6D,YAAY,WACZ4G,aAAa,iBAEf7K,EAAAC,EAAAC,cAAA,SACE0C,KAAK,uBACLC,MAAOqH,EACP1H,SAAUqB,EAAKrB,SACfpC,KAAK,WACL6D,YAAY,mBACZ4G,aAAa,iBAEf7K,EAAAC,EAAAC,cAAA,UAAQ4K,SAAUF,GAAa5G,EAAS5D,KAAK,UAA7C,WAIC6B,GAASjC,EAAAC,EAAAC,cAACgE,EAAD,CAAcjC,MAAOA,cAtElBR,aA8EnBsJ,GAAa,kBACjB/K,EAAAC,EAAAC,cAAA,mCACyBF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,Gf7GV,We6GI,aAIZsK,gBA3FI,SAAA9J,GAAA,IAAGrB,EAAHqB,EAAGrB,QAASgC,EAAZX,EAAYW,QAAZ,OACjB7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC+K,GAAD,CAAYpL,QAASA,EAASgC,QAASA,8MCjB3C,IAAMqJ,GAAU5J,IAAH6J,MAgBPpB,GAAgB,CACpBqB,MAAO,GACPnB,SAAU,IAGNoB,8MACJ/I,qBAAayH,MAEbvH,SAAW,SAAAC,GAAS,IAAAC,EACMD,EAAME,OAAtBC,EADUF,EACVE,KAAMC,EADIH,EACJG,MACdC,EAAKC,SAALjB,OAAAkB,EAAA,EAAAlB,CAAA,GAAiBc,EAAOC,OAG1BI,SAAW,SAACR,EAAO6I,GACjBA,IAASjB,KAAT,eAAA3E,EAAA5D,OAAAwI,EAAA,EAAAxI,CAAAsB,EAAAnD,EAAAsK,KAAc,SAAArH,EAAA3C,GAAA,IAAAqB,EAAA,OAAAwB,EAAAnD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAS5B,EAATrB,EAASqB,KACrBkB,EAAKC,SAALjB,OAAA+C,EAAA,EAAA/C,CAAA,GAAmBiI,KAEnBrK,aAAaC,QAAQ,QAASiC,EAAK0J,OAAOd,OAH9BlH,EAAAE,KAAA,EAKNV,EAAKpB,MAAMG,UALL,OAOZiB,EAAKpB,MAAM7B,QAAQC,KAAKa,GAPZ,wBAAA2C,EAAAK,SAAAT,EAAAU,SAAd,gBAAA6G,GAAA,OAAA/E,EAAAgF,MAAA9G,KAAA+G,YAAA,IAUAlI,EAAMgB,0FAGC,IAAAI,EAAAD,KAAAuE,EACqBvE,KAAKtB,MAAzB8I,EADDjD,EACCiD,MAAOnB,EADR9B,EACQ8B,SAETW,EAAyB,KAAbX,GAA6B,KAAVmB,EAErC,OACEpL,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAU2D,SAAUoH,GAASnH,UAAW,CAAEqH,QAAOnB,aAC9C,SAACqB,EAADpF,KAAWtE,KAAX,IAAiBoC,EAAjBkC,EAAiBlC,QAAS/B,EAA1BiE,EAA0BjE,MAA1B,OACCjC,EAAAC,EAAAC,cAAA,QAAM+C,SAAU,SAAAR,GAAK,OAAIoB,EAAKZ,SAASR,EAAO6I,KAC5CtL,EAAAC,EAAAC,cAAA,SACE0C,KAAK,QACLC,MAAOuI,EACP5I,SAAUqB,EAAKrB,SACfpC,KAAK,OACL6D,YAAY,oBACZ4G,aAAa,aAEf7K,EAAAC,EAAAC,cAAA,SACE0C,KAAK,WACLC,MAAOoH,EACPzH,SAAUqB,EAAKrB,SACfpC,KAAK,WACL6D,YAAY,WACZ4G,aAAa,aAEf7K,EAAAC,EAAAC,cAAA,UAAQ4K,SAAUF,GAAa5G,EAAS5D,KAAK,UAA7C,WAIC6B,GAASjC,EAAAC,EAAAC,cAACgE,EAAD,CAAcjC,MAAOA,cAnDlBR,aA2DzB8J,GAAeP,YAAf,CAxEmB,SAAA9J,GAAA,IAAGrB,EAAHqB,EAAGrB,QAASgC,EAAZX,EAAYW,QAAZ,OACjB7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACsL,GAAD,CAAY3L,QAASA,EAASgC,QAASA,IACvC7B,EAAAC,EAAAC,cAACuL,GAAD,mBCEWC,GAhBW,SAAAC,GAAW,OAAI,SAAAlK,GAAS,OAAI,SAAAC,GAAK,OACzD1B,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOwB,MAAON,GACX,SAAAH,GAA6B,IAA1BU,EAA0BV,EAA1BU,KACF,OAD4BV,EAApB0K,cACY,EACX,KAGFD,EAAY/J,GACjB5B,EAAAC,EAAAC,cAACuB,EAAcC,GAEf1B,EAAAC,EAAAC,cAAC2L,GAAA,EAAD,CAAUnL,GjBfK,iBkBQRgL,MAAkB,SAAAlL,GAAO,OAAIA,GAAWA,EAAQI,IAAhD8K,CANK,kBAClB1L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BCQWwL,MACb,SAAAlL,GAAO,OAAIA,GAAWA,EAAQI,IAA0B,UAApBJ,EAAQI,GAAGE,MADlC4K,CARG,kBAChB1L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4L,GAAD,6BCNW,SAASC,GAAT7K,GAAyD,IAAA8K,EAAA9K,EAArC+K,KAAQzH,EAA6BwH,EAA7BxH,GAAI0H,EAAyBF,EAAzBE,SAAU9E,EAAe4E,EAAf5E,UACvD,OACEpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAE,SAAA0F,OAAW5B,IAAO0H,IAE5BlM,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,wBACaF,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,CAAQmM,OAAO,oBAAoBhF,oSCNxD,IAAMiF,GAAY/K,IAAHgL,MA+CAC,oLA7BX,OACEvM,EAAAC,EAAAC,cAACsH,EAAA,SAAD,KACExH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOwB,MAAO0K,IACX,SAAAnL,GAA8B,IAA3BU,EAA2BV,EAA3BU,KAAMK,EAAqBf,EAArBe,MACR,GAD6Bf,EAAd8C,QAEb,OAAOhE,EAAAC,EAAAC,cAACqH,EAAD,MAET,GAAItF,EACF,OAAOjC,EAAAC,EAAAC,cAAA,kBAGT,IAAMsM,EAAgB5K,EAAK6K,MAAM1H,MAEjC,OACE/E,EAAAC,EAAAC,cAACsH,EAAA,SAAD,KACGkF,QAAQC,IAAI/K,GACZ4K,EAAc1F,IAAI,SAAAmF,GAAI,OACrBjM,EAAAC,EAAAC,cAAC6L,GAAD,CAAU/E,IAAKiF,EAAKzH,GAAIyH,KAAMA,iBApB5BxK,aCRLD,KATO,SAAAN,GAAA,IAAGV,EAAHU,EAAGV,QAAH,OACpBR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WAECM,GAAWA,EAAQI,IAAMZ,EAAAC,EAAAC,cAAC0M,GAAD,oCCPTC,eACnB,SAAAA,EAAYnL,GAAO,IAAAoB,EAAA,OAAAhB,OAAAgL,EAAA,EAAAhL,CAAA8B,KAAAiJ,IACjB/J,EAAAhB,OAAAiL,EAAA,EAAAjL,CAAA8B,KAAA9B,OAAAkL,EAAA,EAAAlL,CAAA+K,GAAAI,KAAArJ,KAAMlC,KAURwL,QAAUC,aAAQ,SAAAC,GAAK,OAAIF,mBAAQE,KAXhBtK,EAanBuK,WAAa,kBAAMvK,EAAKC,SAAS,CAAEuK,MAAOxK,EAAKR,MAAMgL,MAAQ,KAV3DxK,EAAKyK,iBAAmBzK,EAAKyK,iBAAiBC,KAAtB1L,OAAA2L,GAAA,EAAA3L,QAAA2L,GAAA,EAAA3L,CAAAgB,KAExBA,EAAKR,MAAQ,CACXgL,MAAO,EACPI,YAAY,GAPG5K,kFAgBjBc,KAAKb,SAASa,KAAK+J,2DAGJrL,GACf,MAAO,CACLoL,YAAapL,EAAMoL,6CAKrB,IAAME,EAAgBhK,KAAKsJ,QAAQtJ,KAAKlC,MAAMmM,OACxCC,EAAOF,EAAchK,KAAKtB,MAAMgL,OAEtC,OAAI1J,KAAKtB,MAAMgL,OAASM,EAAcG,OAElC/N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBAKFF,EAAAC,EAAAC,cAACsH,EAAA,SAAD,KACExH,EAAAC,EAAAC,cAAA,OACE8N,aAAcpK,KAAK2J,iBACnBU,aAAcrK,KAAK2J,kBAEnBvN,EAAAC,EAAAC,cAAA,UAAK4N,EAAKI,QAEXtK,KAAKtB,MAAMoL,YACV1N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK4N,EAAKK,OAGdnO,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQG,QAASuD,KAAKyJ,YAAtB,iBAnD0B5L,kPCItC,IAAM2M,GAAc9M,IAAH+M,MAcJC,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAxM,OAAAgL,EAAA,EAAAhL,CAAA8B,KAAA0K,GAAAxM,OAAAiL,EAAA,EAAAjL,CAAA8B,KAAA9B,OAAAkL,EAAA,EAAAlL,CAAAwM,GAAA5D,MAAA9G,KAAA+G,YAAA,OAAA7I,OAAA0M,EAAA,EAAA1M,CAAAwM,EAAAC,GAAAzM,OAAA2M,EAAA,EAAA3M,CAAAwM,EAAA,EAAAtH,IAAA,SAAAnE,MAAA,WACW,IACD2B,EAAOZ,KAAKlC,MAAMgN,MAAMC,OAAxBnK,GAGN,OAFAA,EAAKoK,SAASpK,GAGZxE,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOwB,MAAOyM,GAAarK,UAAW,CAAES,OACrC,SAAAtD,GAA8B,IAA3BU,EAA2BV,EAA3BU,KAAMK,EAAqBf,EAArBe,MACR,OAD6Bf,EAAd8C,QAENhE,EAAAC,EAAAC,cAACqH,EAAD,MAELtF,EACKjC,EAAAC,EAAAC,cAAA,kBAGFF,EAAAC,EAAAC,cAAC2O,GAAD,CAAUhB,MAAOjM,EAAKqK,KAAK4B,cAf5CS,EAAA,CAA2B7M,aAsBZiK,MAAkB,SAAAlL,GAAO,OAAIA,GAAWA,EAAQI,IAAhD8K,CAAoD4C,ICMpD9M,KAlCH,SAAAN,GAAA,IAAGV,EAAHU,EAAGV,QAASqB,EAAZX,EAAYW,QAAZ,OACV7B,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAQjP,QAASA,GACfG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6O,EAAD,CAAYvO,QAASA,IAErBR,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMvO,EAAgBwO,UAAW,kBAAMnP,EAAAC,EAAAC,cAACkP,GAAD,SACpDpP,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CACEC,OAAK,EACLC,KzBzBe,UyB0BfC,UAAW,kBAAMnP,EAAAC,EAAAC,cAACmP,GAAD,CAAYxN,QAASA,OAExC7B,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CACEC,OAAK,EACLC,KzB7Be,UyB8BfC,UAAW,kBAAMnP,EAAAC,EAAAC,cAACqL,GAAD,CAAY1J,QAASA,OAExC7B,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAOC,OAAK,EAACC,KzB/BI,WyB+BkBC,UAAW,kBAAMnP,EAAAC,EAAAC,cAACoP,GAAD,SACpDtP,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAOC,OAAK,EAACC,KzB/BE,SyB+BkBC,UAAW,kBAAMnP,EAAAC,EAAAC,cAACqP,GAAD,SAClDvP,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CACEC,OAAK,EACLC,KzBjCkB,QyBkClBC,UAAW,kBAAMnP,EAAAC,EAAAC,cAACsP,GAAD,SAEnBxP,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CACEC,OAAK,EACLC,KzBrCa,YyBsCbC,UAAW,SAAAzN,GAAK,OAAI1B,EAAAC,EAAAC,cAACuP,GAAU/N,UC9BjCgO,GAAW,IAAIC,IAAS,CAC5BC,IAAK,aAGDC,GAAS,IAAIC,IAAc,CAC/BF,IAAG,WACHG,QAAS,CACPC,WAAW,KAITC,GAAkBC,YACtB,SAAAhP,GAAe,IAAZS,EAAYT,EAAZS,MAAYwO,EACeC,YAAkBzO,GAAtC0O,EADKF,EACLE,KAAMC,EADDH,EACCG,UACd,MAAgB,wBAATD,GAAgD,iBAAdC,GAE3CT,GACAH,IAGIa,GAAW,IAAIC,IAAW,SAACF,EAAWG,GAQ1C,OAPAH,EAAUI,WAAW,SAAAnQ,GAAA,IAAAoQ,EAAApQ,EAAGqQ,eAAH,IAAAD,EAAa,GAAbA,EAAA,MAAuB,CAC1CC,QAAQ9O,OAAA+C,EAAA,EAAA/C,CAAA,GACH8O,EADE,CAELC,UAAWnR,aAAaoR,QAAQ,cAI7BL,EAAQH,KAGXS,GAAYC,YAAQ,SAAAtL,GAAqC,IAAlCuL,EAAkCvL,EAAlCuL,cAAeC,EAAmBxL,EAAnBwL,aACtCD,GACFA,EAAcE,QAAQ,SAAAjL,GAAkC,IAA/BhE,EAA+BgE,EAA/BhE,QAA+BgE,EAAtBkL,UAAsBlL,EAAXgJ,KAC3CxC,QAAQC,IAAI,gBAAiBzK,GAEb,sBAAZA,EACF1C,EAAQC,IAIN,kEADAyC,GAGA1C,EAAQC,MAMZyR,IACFxE,QAAQC,IAAI,gBAAiBuE,GAEG,MAA5BA,EAAaG,YACf7R,EAAQC,OAKR6R,GAAOd,IAAWe,KAAK,CAAChB,GAAUQ,GAAWd,KAE7CvL,GAAQ,IAAI8M,IAEZ/R,GAAS,IAAIgS,IAAa,CAC9BH,QACA5M,WAGFgN,IAASC,OACP3R,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBV,OAAQA,IACtBO,EAAAC,EAAAC,cAAC0R,GAAD,OAEFnL,SAASoL,eAAe","file":"static/js/main.d594a2c2.chunk.js","sourcesContent":["export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const ADMIN = \"/admin\";\r\nexport const FLASHCARDS = \"/deck\";\r\nexport const CARDS = \"/deck/:id\";\r\n","import createHistory from \"history/createBrowserHistory\";\r\n\r\nexport default createHistory();\r\n","import React from 'react';\r\nimport { ApolloConsumer } from 'react-apollo';\r\n\r\nimport * as routes from '../../constants/routes';\r\nimport history from '../../constants/history';\r\n\r\nconst SignOutButton = () => (\r\n  <ApolloConsumer>\r\n    {client => (\r\n      <button type=\"button\" onClick={() => signOut(client)}>\r\n        Sign Out\r\n      </button>\r\n    )}\r\n  </ApolloConsumer>\r\n);\r\n\r\nconst signOut = client => {\r\n  localStorage.setItem('token', '');\r\n  client.resetStore();\r\n  history.push(routes.SIGN_IN);\r\n};\r\n\r\nexport { signOut };\r\n\r\nexport default SignOutButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as routes from \"../../constants/routes\";\r\nimport SignOutButton from \"../SignOut\";\r\n\r\nconst Navigation = ({ session }) => (\r\n  <div>\r\n    {session && session.me ? (\r\n      <NavigationAuth session={session} />\r\n    ) : (\r\n      <NavigationNonAuth />\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst NavigationAuth = ({ session }) => (\r\n  <ul>\r\n    <li>\r\n      <Link to={routes.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={routes.FLASHCARDS}>Flashcards</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={routes.ACCOUNT}>Account ({session.me.username})</Link>\r\n    </li>\r\n    {session && session.me && session.me.role === \"ADMIN\" && (\r\n      <li>\r\n        <Link to={routes.ADMIN}>Admin</Link>\r\n      </li>\r\n    )}\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={routes.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={routes.LANDING}>Landing</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_ME = gql`\r\n  {\r\n    me {\r\n      id\r\n      username\r\n      email\r\n      role\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { GET_ME } from './queries';\r\n\r\nconst withSession = Component => props => (\r\n  <Query query={GET_ME}>\r\n    {({ data, refetch }) => (\r\n      <Component {...props} session={data} refetch={refetch} />\r\n    )}\r\n  </Query>\r\n);\r\n\r\nexport default withSession;\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = ({ error }) => (\r\n  <div>\r\n    <small>{error.message}</small>\r\n  </div>\r\n);\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport ErrorMessage from \"../../Error\";\r\n\r\nconst CREATE_MESSAGE = gql`\r\n  mutation($text: String!) {\r\n    createMessage(text: $text) {\r\n      id\r\n      text\r\n      createdAt\r\n      user {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass MessageCreate extends Component {\r\n  state = {\r\n    text: \"\"\r\n  };\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = async (event, createMessage) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await createMessage();\r\n      this.setState({ text: \"\" });\r\n    } catch (error) {}\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n\r\n    return (\r\n      <Mutation\r\n        mutation={CREATE_MESSAGE}\r\n        variables={{ text }}\r\n        // Not used anymore because of Subscription\r\n\r\n        // update={(cache, { data: { createMessage } }) => {\r\n        //   const data = cache.readQuery({\r\n        //     query: GET_ALL_MESSAGES_WITH_USERS,\r\n        //   });\r\n\r\n        //   cache.writeQuery({\r\n        //     query: GET_ALL_MESSAGES_WITH_USERS,\r\n        //     data: {\r\n        //       ...data,\r\n        //       messages: {\r\n        //         ...data.messages,\r\n        //         edges: [createMessage, ...data.messages.edges],\r\n        //         pageInfo: data.messages.pageInfo,\r\n        //       },\r\n        //     },\r\n        //   });\r\n        // }}\r\n      >\r\n        {(createMessage, { data, loading, error }) => (\r\n          <form onSubmit={event => this.onSubmit(event, createMessage)}>\r\n            <textarea\r\n              name=\"text\"\r\n              value={text}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Your message ...\"\r\n            />\r\n            <button type=\"submit\">Send</button>\r\n\r\n            {error && <ErrorMessage error={error} />}\r\n          </form>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageCreate;\r\n","import React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nconst GET_ALL_MESSAGES_WITH_USERS = gql`\r\n  query {\r\n    messages(order: \"DESC\") @connection(key: \"MessagesConnection\") {\r\n      edges {\r\n        id\r\n        text\r\n        createdAt\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_MESSAGE = gql`\r\n  mutation($id: ID!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nconst MessageDelete = ({ message }) => (\r\n  <Mutation\r\n    mutation={DELETE_MESSAGE}\r\n    variables={{ id: message.id }}\r\n    update={cache => {\r\n      const data = cache.readQuery({\r\n        query: GET_ALL_MESSAGES_WITH_USERS,\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: GET_ALL_MESSAGES_WITH_USERS,\r\n        data: {\r\n          ...data,\r\n          messages: {\r\n            ...data.messages,\r\n            edges: data.messages.edges.filter(\r\n              node => node.id !== message.id,\r\n            ),\r\n            pageInfo: data.messages.pageInfo,\r\n          },\r\n        },\r\n      });\r\n    }}\r\n  >\r\n    {(deleteMessage, { data, loading, error }) => (\r\n      <button type=\"button\" onClick={deleteMessage}>\r\n        Delete\r\n      </button>\r\n    )}\r\n  </Mutation>\r\n);\r\n\r\nexport default MessageDelete;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nexport default Loading;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nimport MessageDelete from '../MessageDelete';\r\nimport Loading from '../../Loading';\r\n\r\nconst MESSAGE_CREATED = gql`\r\n  subscription {\r\n    messageCreated {\r\n      message {\r\n        id\r\n        text\r\n        createdAt\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PAGINATED_MESSAGES_WITH_USERS = gql`\r\n  query($cursor: String, $limit: Int!) {\r\n    messages(cursor: $cursor, limit: $limit)\r\n      @connection(key: \"MessagesConnection\") {\r\n      edges {\r\n        id\r\n        text\r\n        createdAt\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n        endCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Messages = ({ limit, me }) => (\r\n  <Query\r\n    query={GET_PAGINATED_MESSAGES_WITH_USERS}\r\n    variables={{ limit }}\r\n  >\r\n    {({ data, loading, error, fetchMore, subscribeToMore }) => {\r\n      if (!data) {\r\n        return (\r\n          <div>\r\n            There are no messages yet ... Try to create one by\r\n            yourself.\r\n          </div>\r\n        );\r\n      }\r\n\r\n      const { messages } = data;\r\n\r\n      if (loading || !messages) {\r\n        return <Loading />;\r\n      }\r\n\r\n      const { edges, pageInfo } = messages;\r\n\r\n      return (\r\n        <Fragment>\r\n          <MessageList\r\n            messages={edges}\r\n            me={me}\r\n            subscribeToMore={subscribeToMore}\r\n          />\r\n\r\n          {pageInfo.hasNextPage && (\r\n            <MoreMessagesButton\r\n              limit={limit}\r\n              pageInfo={pageInfo}\r\n              fetchMore={fetchMore}\r\n            >\r\n              More\r\n            </MoreMessagesButton>\r\n          )}\r\n        </Fragment>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nconst MoreMessagesButton = ({\r\n  limit,\r\n  pageInfo,\r\n  fetchMore,\r\n  children,\r\n}) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={() =>\r\n      fetchMore({\r\n        variables: {\r\n          cursor: pageInfo.endCursor,\r\n          limit,\r\n        },\r\n        updateQuery: (previousResult, { fetchMoreResult }) => {\r\n          if (!fetchMoreResult) {\r\n            return previousResult;\r\n          }\r\n\r\n          return {\r\n            messages: {\r\n              ...fetchMoreResult.messages,\r\n              edges: [\r\n                ...previousResult.messages.edges,\r\n                ...fetchMoreResult.messages.edges,\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      })\r\n    }\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nclass MessageList extends Component {\r\n  subscribeToMoreMessage = () => {\r\n    this.props.subscribeToMore({\r\n      document: MESSAGE_CREATED,\r\n      updateQuery: (previousResult, { subscriptionData }) => {\r\n        if (!subscriptionData.data) {\r\n          return previousResult;\r\n        }\r\n\r\n        const { messageCreated } = subscriptionData.data;\r\n\r\n        return {\r\n          ...previousResult,\r\n          messages: {\r\n            ...previousResult.messages,\r\n            edges: [\r\n              messageCreated.message,\r\n              ...previousResult.messages.edges,\r\n            ],\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.subscribeToMoreMessage();\r\n  }\r\n\r\n  render() {\r\n    const { messages, me } = this.props;\r\n\r\n    return messages.map(message => (\r\n      <MessageItem key={message.id} message={message} me={me} />\r\n    ));\r\n  }\r\n}\r\n\r\nconst MessageItem = ({ message, me }) => (\r\n  <div>\r\n    <h3>{message.user.username}</h3>\r\n    <small>{message.createdAt}</small>\r\n    <p>{message.text}</p>\r\n\r\n    {me &&\r\n      message.user.id === me.id && (\r\n        <MessageDelete message={message} />\r\n      )}\r\n  </div>\r\n);\r\n\r\nexport default Messages;\r\n","import React, { Component } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport ErrorMessage from \"../../Error\";\r\n\r\nconst CREATE_ASSIGNMENT = gql`\r\n  mutation($assignment_name: String!, $description: String, $url: String) {\r\n    createAssignment(\r\n      assignment_name: $assignment_name\r\n      description: $description\r\n      url: $url\r\n    ) {\r\n      id\r\n      assignment_name\r\n      description\r\n      url\r\n      createdAt\r\n      user {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass AssignmentCreate extends Component {\r\n  state = {\r\n    assignment_name: \"\",\r\n    description: \"\",\r\n    url: \"\"\r\n  };\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = async (event, createAssignment) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await createAssignment();\r\n      this.setState({ assignment_name: \"\", description: \"\", url: \"\" });\r\n    } catch (error) {}\r\n  };\r\n\r\n  render() {\r\n    const { assignment_name, description, url } = this.state;\r\n\r\n    return (\r\n      <Mutation\r\n        mutation={CREATE_ASSIGNMENT}\r\n        variables={{ assignment_name, description, url }}\r\n      >\r\n        {(createAssignment, { data, loading, error }) => (\r\n          <form onSubmit={event => this.onSubmit(event, createAssignment)}>\r\n            <textarea\r\n              name=\"assignment_name\"\r\n              value={assignment_name}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Your assignment name ... (REQUIRED)\"\r\n            />\r\n            <textarea\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Add details and notes ...\"\r\n            />\r\n            <textarea\r\n              name=\"url\"\r\n              value={url}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Add a link\"\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n\r\n            {error && <ErrorMessage error={error} />}\r\n          </form>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssignmentCreate;\r\n","import React from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst GET_ALL_ASSIGNMENTS_WITH_USERS = gql`\r\n  query {\r\n    assignments(order: \"DESC\") @connection(key: \"AssignmentsConnection\") {\r\n      edges {\r\n        id\r\n        assignment_name\r\n        description\r\n        url\r\n        createdAt\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_ASSIGNMENT = gql`\r\n  mutation($id: ID!) {\r\n    deleteAssignment(id: $id)\r\n  }\r\n`;\r\n\r\nconst AssignmentDelete = ({ assignment }) => (\r\n  <Mutation\r\n    mutation={DELETE_ASSIGNMENT}\r\n    variables={{ id: assignment.id }}\r\n    update={cache => {\r\n      const data = cache.readQuery({\r\n        query: GET_ALL_ASSIGNMENTS_WITH_USERS\r\n      });\r\n\r\n      cache.writeQuery({\r\n        query: GET_ALL_ASSIGNMENTS_WITH_USERS,\r\n        data: {\r\n          ...data,\r\n          assignments: {\r\n            ...data.assignments,\r\n            edges: data.assignments.edges.filter(\r\n              node => node.id !== assignment.id\r\n            ),\r\n            pageInfo: data.assignments.pageInfo\r\n          }\r\n        }\r\n      });\r\n    }}\r\n  >\r\n    {(deleteAssignment, { data, loading, error }) => (\r\n      <button type=\"button\" onClick={deleteAssignment}>\r\n        Delete\r\n      </button>\r\n    )}\r\n  </Mutation>\r\n);\r\n\r\nexport default AssignmentDelete;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport AssignmentDelete from \"../AssignmentDelete\";\r\nimport Loading from \"../../Loading\";\r\n\r\nconst ASSIGNMENT_CREATED = gql`\r\n  subscription {\r\n    assignmentCreated {\r\n      assignment {\r\n        id\r\n        assignment_name\r\n        description\r\n        url\r\n        createdAt\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PAGINATED_ASSIGNMENTS_WITH_USERS = gql`\r\n  query($cursor: String, $limit: Int!) {\r\n    assignments(cursor: $cursor, limit: $limit)\r\n      @connection(key: \"AssignmentsConnection\") {\r\n      edges {\r\n        id\r\n        assignment_name\r\n        description\r\n        url\r\n        createdAt\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n        endCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Assignments = ({ limit, me }) => (\r\n  <Query query={GET_PAGINATED_ASSIGNMENTS_WITH_USERS} variables={{ limit }}>\r\n    {({ data, loading, error, fetchMore, subscribeToMore }) => {\r\n      if (!data) {\r\n        return <div>There are no assignments yet ...</div>;\r\n      }\r\n\r\n      const { assignments } = data;\r\n\r\n      if (loading || !assignments) {\r\n        return <Loading />;\r\n      }\r\n\r\n      const { edges, pageInfo } = assignments;\r\n\r\n      return (\r\n        <Fragment>\r\n          <AssignmentList\r\n            assignments={edges}\r\n            me={me}\r\n            subscribeToMore={subscribeToMore}\r\n          />\r\n\r\n          {pageInfo.hasNextPage && (\r\n            <MoreAssignmentsButton\r\n              limit={limit}\r\n              pageInfo={pageInfo}\r\n              fetchMore={fetchMore}\r\n            >\r\n              More\r\n            </MoreAssignmentsButton>\r\n          )}\r\n        </Fragment>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nconst MoreAssignmentsButton = ({ limit, pageInfo, fetchMore, children }) => (\r\n  <button\r\n    type=\"button\"\r\n    onClick={() =>\r\n      fetchMore({\r\n        variables: {\r\n          cursor: pageInfo.endCursor,\r\n          limit\r\n        },\r\n        updateQuery: (previousResult, { fetchMoreResult }) => {\r\n          if (!fetchMoreResult) {\r\n            return previousResult;\r\n          }\r\n\r\n          return {\r\n            assignments: {\r\n              ...fetchMoreResult.assignments,\r\n              edges: [\r\n                ...previousResult.assignments.edges,\r\n                ...fetchMoreResult.assignments.edges\r\n              ]\r\n            }\r\n          };\r\n        }\r\n      })\r\n    }\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nclass AssignmentList extends Component {\r\n  subscribeToMoreAssignment = () => {\r\n    this.props.subscribeToMore({\r\n      document: ASSIGNMENT_CREATED,\r\n      updateQuery: (previousResult, { subscriptionData }) => {\r\n        if (!subscriptionData.data) {\r\n          return previousResult;\r\n        }\r\n\r\n        const { assignmentCreated } = subscriptionData.data;\r\n\r\n        return {\r\n          ...previousResult,\r\n          assignments: {\r\n            ...previousResult.assignments,\r\n            edges: [\r\n              assignmentCreated.assignment,\r\n              ...previousResult.assignments.edges\r\n            ]\r\n          }\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.subscribeToMoreAssignment();\r\n  }\r\n\r\n  render() {\r\n    const { assignments, me } = this.props;\r\n\r\n    return assignments.map(assignment => (\r\n      <AssignmentItem key={assignment.id} assignment={assignment} me={me} />\r\n    ));\r\n  }\r\n}\r\n\r\nconst AssignmentItem = ({ assignment, me }) => (\r\n  <div>\r\n    <h3>{assignment.user.username}</h3>\r\n    <small>{assignment.createdAt}</small>\r\n    <p>{assignment.assignment_name}</p>\r\n    <p>{assignment.description}</p>\r\n\r\n    {me && assignment.user.id === me.id && (\r\n      <AssignmentDelete assignment={assignment} />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Assignments;\r\n","import React from \"react\";\r\n\r\nimport withSession from \"../Session/withSession\";\r\n\r\nimport { MessageCreate, Messages } from \"../Message\";\r\nimport { Assignments } from \"../Assignment\";\r\n\r\nconst Landing = ({ session }) => (\r\n  <div>\r\n    <h2>Landing page</h2>\r\n    <hr />\r\n    {session && session.me && <Assignments me={session.me} limit={2} />}\r\n    <hr />\r\n    {session && session.me && <MessageCreate />}\r\n    {session && session.me && <Messages me={session.me} limit={3} />}\r\n  </div>\r\n);\r\n\r\nexport default withSession(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport * as routes from \"../../constants/routes\";\r\nimport ErrorMessage from \"../Error\";\r\n\r\nconst SIGN_UP = gql`\r\n  mutation($username: String!, $email: String!, $password: String!) {\r\n    signUp(username: $username, email: $email, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\"\r\n};\r\n\r\nconst SignUpPage = ({ history, refetch }) => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm history={history} refetch={refetch} />\r\n  </div>\r\n);\r\n\r\nclass SignUpForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = (event, signUp) => {\r\n    signUp().then(async ({ data }) => {\r\n      this.setState({ ...INITIAL_STATE });\r\n\r\n      localStorage.setItem(\"token\", data.signUp.token);\r\n\r\n      await this.props.refetch();\r\n\r\n      this.props.history.push(routes.LANDING);\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { username, email, password, passwordConfirmation } = this.state;\r\n\r\n    const isInvalid =\r\n      password !== passwordConfirmation ||\r\n      password === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <Mutation mutation={SIGN_UP} variables={{ username, email, password }}>\r\n        {(signUp, { data, loading, error }) => (\r\n          <form onSubmit={event => this.onSubmit(event, signUp)}>\r\n            <input\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Full Name\"\r\n            />\r\n            <input\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Email Address\"\r\n              autoComplete=\"username\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              autoComplete=\"new-password\"\r\n            />\r\n            <input\r\n              name=\"passwordConfirmation\"\r\n              value={passwordConfirmation}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              autoComplete=\"new-password\"\r\n            />\r\n            <button disabled={isInvalid || loading} type=\"submit\">\r\n              Sign Up\r\n            </button>\r\n\r\n            {error && <ErrorMessage error={error} />}\r\n          </form>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nexport default withRouter(SignUpPage);\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { SignUpLink } from \"../SignUp\";\r\nimport * as routes from \"../../constants/routes\";\r\nimport ErrorMessage from \"../Error\";\r\n\r\nconst SIGN_IN = gql`\r\n  mutation($login: String!, $password: String!) {\r\n    signIn(login: $login, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignInPage = ({ history, refetch }) => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm history={history} refetch={refetch} />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  login: \"\",\r\n  password: \"\"\r\n};\r\n\r\nclass SignInForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = (event, signIn) => {\r\n    signIn().then(async ({ data }) => {\r\n      this.setState({ ...INITIAL_STATE });\r\n\r\n      localStorage.setItem(\"token\", data.signIn.token);\r\n\r\n      await this.props.refetch();\r\n\r\n      this.props.history.push(routes.LANDING);\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { login, password } = this.state;\r\n\r\n    const isInvalid = password === \"\" || login === \"\";\r\n\r\n    return (\r\n      <Mutation mutation={SIGN_IN} variables={{ login, password }}>\r\n        {(signIn, { data, loading, error }) => (\r\n          <form onSubmit={event => this.onSubmit(event, signIn)}>\r\n            <input\r\n              name=\"login\"\r\n              value={login}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Email or Username\"\r\n              autoComplete=\"username\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              autoComplete=\"password\"\r\n            />\r\n            <button disabled={isInvalid || loading} type=\"submit\">\r\n              Sign In\r\n            </button>\r\n\r\n            {error && <ErrorMessage error={error} />}\r\n          </form>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignInPage);\r\n\r\nexport { SignInForm };\r\n","import React from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as routes from '../../constants/routes';\r\nimport { GET_ME } from './queries';\r\n\r\nconst withAuthorization = conditionFn => Component => props => (\r\n  <Query query={GET_ME}>\r\n    {({ data, networkStatus }) => {\r\n      if (networkStatus < 7) {\r\n        return null;\r\n      }\r\n\r\n      return conditionFn(data) ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={routes.SIGN_IN} />\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default withAuthorization;\r\n","import React from \"react\";\r\n\r\nimport withAuthorization from \"../Session/withAuthorization\";\r\n\r\nconst AccountPage = () => (\r\n  <div>\r\n    <h1>Account Page</h1>\r\n  </div>\r\n);\r\n\r\nexport default withAuthorization(session => session && session.me)(AccountPage);\r\n","import React from \"react\";\r\n\r\nimport withAuthorization from \"../Session/withAuthorization\";\r\n\r\nimport { AssignmentCreate } from \"../Assignment\";\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Admin Page</h1>\r\n    <hr />\r\n    <AssignmentCreate />\r\n  </div>\r\n);\r\n\r\nexport default withAuthorization(\r\n  session => session && session.me && session.me.role === \"ADMIN\"\r\n)(AdminPage);\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function DeckItem({ deck: { id, deckName, createdAt } }) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>\r\n          <Link to={`/deck/${id}`}>{deckName}</Link>\r\n        </h2>\r\n        <p>Description coming soon...</p>\r\n        <h5>\r\n          Created on <Moment format=\"YYYY-MM-DD HH:mm\">{createdAt}</Moment>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport Loading from \"../../Loading\";\r\nimport DeckItem from \"./DeckItem\";\r\n\r\nconst GET_DECKS = gql`\r\n  query DeckQuery {\r\n    decks @connection(key: \"DeckConnection\") {\r\n      edges {\r\n        id\r\n        deckName\r\n        createdAt\r\n        cards {\r\n          id\r\n          front\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Decks extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h1>Deck</h1>\r\n        <Query query={GET_DECKS}>\r\n          {({ data, error, loading }) => {\r\n            if (loading) {\r\n              return <Loading />;\r\n            }\r\n            if (error) {\r\n              return <p>Error</p>;\r\n            }\r\n\r\n            const decksToRender = data.decks.edges;\r\n\r\n            return (\r\n              <Fragment>\r\n                {console.log(data)}\r\n                {decksToRender.map(deck => (\r\n                  <DeckItem key={deck.id} deck={deck} />\r\n                ))}\r\n              </Fragment>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Decks;\r\n","import React from \"react\";\r\n\r\nimport withSession from \"../Session/withSession\";\r\n\r\nimport Decks from \"./Decks\";\r\n\r\nconst FlashCardPage = ({ session }) => (\r\n  <div>\r\n    <h2>Flashcards</h2>\r\n    <hr />\r\n\r\n    {session && session.me && <Decks />}\r\n  </div>\r\n);\r\n\r\nexport default withSession(FlashCardPage);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { shuffle } from \"lodash\";\r\nimport memoize from \"memoize-one\";\r\n\r\nexport default class CardDeck extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleMouseHover = this.handleMouseHover.bind(this);\r\n\r\n    this.state = {\r\n      index: 0,\r\n      isHovering: false\r\n    };\r\n  }\r\n\r\n  shuffle = memoize(array => shuffle(array));\r\n\r\n  onGoToNext = () => this.setState({ index: this.state.index + 1 });\r\n\r\n  handleMouseHover() {\r\n    this.setState(this.toggleHoverState);\r\n  }\r\n\r\n  toggleHoverState(state) {\r\n    return {\r\n      isHovering: !state.isHovering\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const shuffledCards = this.shuffle(this.props.cards);\r\n    const item = shuffledCards[this.state.index];\r\n\r\n    if (this.state.index >= shuffledCards.length) {\r\n      return (\r\n        <div>\r\n          <h1>Finished</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <div\r\n            onMouseEnter={this.handleMouseHover}\r\n            onMouseLeave={this.handleMouseHover}\r\n          >\r\n            <h1>{item.front}</h1>\r\n          </div>\r\n          {this.state.isHovering && (\r\n            <div>\r\n              <h1>{item.back}</h1>\r\n            </div>\r\n          )}\r\n          <p>\r\n            <button onClick={this.onGoToNext}>Next</button>\r\n          </p>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport withAuthorization from \"../../Session/withAuthorization\";\r\n\r\nimport Loading from \"../../Loading\";\r\nimport CardDeck from \"./CardDeck\";\r\n\r\nconst CARDS_QUERY = gql`\r\n  query CardsQuery($id: ID!) {\r\n    deck(id: $id) {\r\n      id\r\n      deckName\r\n      cards {\r\n        id\r\n        front\r\n        back\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Cards extends Component {\r\n  render() {\r\n    let { id } = this.props.match.params;\r\n    id = parseInt(id);\r\n\r\n    return (\r\n      <Query query={CARDS_QUERY} variables={{ id }}>\r\n        {({ data, error, loading }) => {\r\n          if (loading) {\r\n            return <Loading />;\r\n          }\r\n          if (error) {\r\n            return <p>Error</p>;\r\n          }\r\n\r\n          return <CardDeck cards={data.deck.cards} />;\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthorization(session => session && session.me)(Cards);\r\n","import React from \"react\";\r\nimport { Router, Route } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport LandingPage from \"../Landing\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport AccountPage from \"../Account\";\r\nimport AdminPage from \"../Admin\";\r\nimport withSession from \"../Session/withSession\";\r\nimport FlashCardPage from \"../FlashCards\";\r\nimport Cards from \"../FlashCards/Cards\";\r\n\r\nimport * as routes from \"../../constants/routes\";\r\nimport history from \"../../constants/history\";\r\n\r\nconst App = ({ session, refetch }) => (\r\n  <Router history={history}>\r\n    <div>\r\n      <Navigation session={session} />\r\n\r\n      <hr />\r\n\r\n      <Route exact path={routes.LANDING} component={() => <LandingPage />} />\r\n      <Route\r\n        exact\r\n        path={routes.SIGN_UP}\r\n        component={() => <SignUpPage refetch={refetch} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path={routes.SIGN_IN}\r\n        component={() => <SignInPage refetch={refetch} />}\r\n      />\r\n      <Route exact path={routes.ACCOUNT} component={() => <AccountPage />} />\r\n      <Route exact path={routes.ADMIN} component={() => <AdminPage />} />\r\n      <Route\r\n        exact\r\n        path={routes.FLASHCARDS}\r\n        component={() => <FlashCardPage />}\r\n      />\r\n      <Route\r\n        exact\r\n        path={routes.CARDS}\r\n        component={props => <Cards {...props} />}\r\n      />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withSession(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport { ApolloLink, split } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { onError } from \"apollo-link-error\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport App from \"./components/App\";\nimport { signOut } from \"./components/SignOut\";\n\nconst httpLink = new HttpLink({\n  uri: \"/graphql\"\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst authLink = new ApolloLink((operation, forward) => {\n  operation.setContext(({ headers = {} }) => ({\n    headers: {\n      ...headers,\n      \"x-token\": localStorage.getItem(\"token\")\n    }\n  }));\n\n  return forward(operation);\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log(\"GraphQL error\", message);\n\n      if (message === \"NOT_AUTHENTICATED\") {\n        signOut(client);\n      } else {\n        if (\n          message ===\n          \"Context creation failed: Your session expired. Sign in again.\"\n        ) {\n          signOut(client);\n        }\n      }\n    });\n  }\n\n  if (networkError) {\n    console.log(\"Network error\", networkError);\n\n    if (networkError.statusCode === 401) {\n      signOut(client);\n    }\n  }\n});\n\nconst link = ApolloLink.from([authLink, errorLink, terminatingLink]);\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link,\n  cache\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}